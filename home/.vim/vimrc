call plug#begin()
Plug 'cespare/vim-sbd'
Plug 'justinmk/vim-ipmotion'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
call plug#end()

let netrw_banner = 0                 " Hide the big annoying banner.
let netrw_dirhistmax = 0             " Don't create .netrwhist files.
let netrw_list_hide = '^\.\.\?/$'    " Hide . and .. in netrw.
let markdown_folding = 1             " Set folds on markdown headings.
let ip_skipfold = 1                  " From justinmk/vim-ipmotion.

set tabstop=4 shiftwidth=4
set incsearch hlsearch ignorecase smartcase
set hidden
set noswapfile nomodeline
set nowrap nojoinspaces
set backspace=eol,start
set virtualedit=block
set foldmethod=indent foldlevel=99
set undofile undodir=~/vim.undodir
set ttimeoutlen=0                    " Remove delay when exiting visual mode.
set shortmess=IF                     " Don't show intro message and file names.
set laststatus=1                     " Only show status line when there are multiple windows.
set completeopt=menuone              " Always show menu, even if there is only one match.
set fillchars=vert:\â”‚
if v:version >= 900
	set fillchars+=eob:\             " Remove the ~'s.
endif

filetype plugin indent off

augroup BRIANO
	autocmd!

	" Special indentation for 'special' languages.
	autocmd FileType haskell,python setlocal expandtab

	" Gofmt go files before write.
	autocmd BufWritePre *.go call Gofmt()

	" Set mappings consistent with plugin/maps.vim.
	autocmd FileType netrw nnoremap <buffer> <silent> S :bprevious<cr>
	autocmd FileType netrw nnoremap <buffer> <silent> s :bnext<cr>
	autocmd FileType qf nnoremap <buffer> <cr> <cr>
augroup END

" Gofmt formats the current buffer.
function! Gofmt()
	let l:view = winsaveview()
	call system('goimports', getline(1, '$'))
	if v:shell_error == 0
		%!goimports
	endif
	call winrestview(l:view)
endfunction
